[{"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\Navbar.tsx":"3","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\TodoForm.tsx":"4","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\TodoList.tsx":"5","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\pages\\TodosPage.tsx":"6","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\pages\\AboutPage.tsx":"7"},{"size":222,"mtime":1611484395916,"results":"8","hashOfConfig":"9"},{"size":586,"mtime":1611494118616,"results":"10","hashOfConfig":"9"},{"size":516,"mtime":1611494180657,"results":"11","hashOfConfig":"9"},{"size":1172,"mtime":1611487048857,"results":"12","hashOfConfig":"9"},{"size":1382,"mtime":1611491390502,"results":"13","hashOfConfig":"9"},{"size":1555,"mtime":1611492365103,"results":"14","hashOfConfig":"9"},{"size":873,"mtime":1611494324604,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"isvtu2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\index.tsx",[],["32","33"],"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\App.tsx",[],"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\Navbar.tsx",[],"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\TodoForm.tsx",[],"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\components\\TodoList.tsx",["34"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport { ITodo } from '../interfaces';\r\n\r\ntype TodoListProps = {\r\n    todos: Array<ITodo>\r\n    onToggle: (id: number) => void\r\n    onRemove: (id: number) => void\r\n}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle }) => {\r\n    \r\n    if (todos.length === 0) {\r\n        return <p className = \"center\"> Пока дел нет ! </p>\r\n    }\r\n\r\n    const removeHandler = (event: React.MouseEvent, id: number) => {\r\n        event.preventDefault();\r\n         \r\n        onRemove( id )\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => {\r\n                const classes = ['todo'];\r\n                if (todo.completed) {\r\n                    classes.push('completed')\r\n                    \r\n                }\r\n                return (\r\n                    <li className = { classes.join(' ') } key = { todo.id }>\r\n                        <label>\r\n                            <input type=\"checkbox\" checked = { todo.completed } onChange = {() => onToggle(todo.id) }/>\r\n                            <span> { todo.title } </span>\r\n                            <i className=\"material-icons red-text\" onClick = {event => removeHandler(event, todo.id)}> delete </i>\r\n                        </label>\r\n                    </li>\r\n                )\r\n            })}\r\n\r\n        </ul>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\pages\\TodosPage.tsx",[],"C:\\Users\\User\\Desktop\\TypeScript\\type\\src\\pages\\AboutPage.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]